import { assertEquals, test } from "TestTools"
import { EQUAL, LESS, MORE } from "Compare"

import IO from 'IO'
import {} from 'Number'
import {} from 'String'
import {} from 'Boolean'

import {matchesURI, instigate, ExplicitMatch, WildcardMatch, NoMatch } from './Main'
import type { Match } from './Main'

SAMPLE_ROUTES = [
  {path: '/alpha/beta'},
  {path: '/gamma/delta'},
  {path: '/name/:name/detail/:detail'},
  {path: '/a/b/:c'}
]


taggedTest = (tag, fn, desc, input, expected) => {
  IO.trace(tag ++ ':usecase', expected)
  return test(
    tag ++ ' - ' ++ desc,
    (_) => pipe(
      fn,
      assertEquals($, expected)
    )(input)
  )
}

matchesSample = matchesURI(
  SAMPLE_ROUTES
)

test_matchesURI = taggedTest('matchesURI', matchesSample)

test_matchesURI('gamma delta', ['gamma', 'delta'], true)
test_matchesURI('gamma :jamma', ['gamma', ':jamma'], true)
test_matchesURI('epsilon omega', ['epsilon', 'omega'], true)
test_matchesURI('a b c', ['a', 'b', 'c'], true)
test_matchesURI('a/b/:shit', ['a', 'b', ':shit'], true)

test_matchesURI('omega', ['omega'], false)
test_matchesURI('a', ['a'], false)
test_matchesURI('b', ['b'], false)
test_matchesURI('c', ['c'], false)

instigateFromSamples = pipe(
  instigate(
    SAMPLE_ROUTES
  ),
  map(map(where {
    ExplicitMatch(match) => ({kind: 'explicit', match})
    WildcardMatch(match) => ({kind: 'wildcard', match})
    NoMatch => ({kind: 'no-match', match: ''})
  }))
)
test_instigate = taggedTest('instigate', instigateFromSamples)

test_instigate('/a/b/:c', '/a/b/:c', [
  [
    {kind:"explicit", match:"a"},
    {kind:"explicit", match:"b"},
    {kind:"wildcard",match:":c"}
  ]
])
test_instigate('localhost:5050/a/b/:c', 'localhost:5050/a/b/:c', [
  [
    {kind:"explicit", match:"a"},
    {kind:"explicit", match:"b"},
    {kind:"wildcard",match:":c"}
  ]
])

test_instigate('localhost:5050/name/arnaud/detail/points', 'localhost:5050/name/arnaud/detail/points', [
  [
    {kind:"explicit", match:"name"},
    {kind:"wildcard",match:":name"},
    {kind:"explicit", match:"detail"},
    {kind:"wildcard",match:":detail"}
  ]
])


test_instigate('/nope', '/nope', [])

